name: Build and Publish Python Pipeline

trigger:
- master

variables:
  # Access token for the git repository. Used by the git tag task.
  - name: system_accesstoken
    value: $(System.AccessToken)

pool:
  vmImage: 'ubuntu-18.04'

steps:

- task: gittools.gitversion.gitversion-task.GitVersion@5
  displayName: GitVersion
  name: GitVersion
  inputs:
    preferBundledVersion: false

# Set python version to be used to build the packages.
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.6'
  displayName: 'Use Python 3.6'

- script: |
    python -m pip install --upgrade pip
    pip install setuptools wheel twine
  displayName: 'Install dependencies'
  
# Delete existing packages in the 'dist' directory
- script: |
    rm -f ./fiftyone_pipeline_cloudrequestengine/dist/*
    rm -f ./fiftyone_pipeline_core/dist/*
    rm -f ./fiftyone_pipeline_engines/dist/*
    rm -f ./fiftyone_pipeline_engines_fiftyone/dist/*
  displayName: 'Delete existing packages'

# Build packages
- script: |
    cd ./fiftyone_pipeline_cloudrequestengine
    python setup.py sdist bdist_wheel
     
    cd ../fiftyone_pipeline_core
    python setup.py sdist bdist_wheel 
    
    cd ../fiftyone_pipeline_engines
    python setup.py sdist bdist_wheel
    
    cd ../fiftyone_pipeline_engines_fiftyone
    python setup.py sdist bdist_wheel
  displayName: 'Build Packages'
  
# Copy artifacts contents.
- task: CopyFiles@2
  inputs:
    sourceFolder: '$(Build.SourcesDirectory)'
    Contents: |
     **/dist/*
    targetFolder: $(Build.ArtifactStagingDirectory)
  displayName: 'Copy Build files'
  condition: succeededOrFailed()

- script: |
   ls $(Build.ArtifactStagingDirectory)/**/*   
  displayName: 'List artifact staging contents'
  condition: succeededOrFailed()
  
# Add a tag to the git repository with the version number.
- task: ATP.ATP-GitTag.GitTag.GitTag@5
  displayName: 'Tag Repo With Version Number'
  inputs:
    tagUser: 'Azure DevOps'
    tagEmail: 'CIUser@51Degrees.com'

# Only create the tag if we're on master, develop or a release branch.
# This can be overridden by setting the 'ForceTagCommit' variable to true.
  condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), or(eq(variables['Build.SourceBranch'], 'refs/heads/develop'), or(startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'), eq('true', variables['ForceTagCommit'])))))
  
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)'
    preferBundledVersion: True
  displayName: 'Publish Python artifact'
  condition: succeededOrFailed()
