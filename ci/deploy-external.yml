# Disable automatic runs of this pipeline when changes are pushed to the repository.
trigger: none

# Disable automatic runs of this pipeline when a PR is create.
pr: none

# Add the pipeline that builds the packages as a resource.
# This allows the deployment pipeline to be triggered whenever
# the build pipeline completes.
# Add common-ci repo as a resource to access common templates.
resources:
  pipelines:
  - pipeline: build-pipeline   # The name for the triggering build pipeline within this script
    source: pipeline-python-create-packages # Name of the pipeline
    trigger: true 

  repositories:
  - repository: ciTemplates # Id of the repository used to reference to in this script
    type: git
    name: common-ci # Name of the actual repository
    
# Include shared variables
variables:
- template: shared-variables.yml
- name: targetBranch
  value: 'refs/heads/master'
  
stages:
                            
- stage: publish_testpypi
  displayName: Publish to TestPyPI
  condition: eq(variables['build.sourceBranch'], variables['targetBranch'])
  jobs:
  - deployment: deploy_testpypi
    displayName: Deploy to TestPyPI
    pool:
      vmImage: $(linuxImage)
      workspace:
        clean: all
    environment: testpypi
    strategy:
      runOnce:
        deploy:
          steps: 
                     
          - template: shared-publish-packages.yml
            parameters:
              publishEndpoint: 'testpypi'      

- stage: publish_pypi
  displayName: Publish to PyPI
  dependsOn: [publish_testpypi]
  condition: eq(variables['build.sourceBranch'], variables['targetBranch'])
  jobs:
  - deployment: deploy_pypi
    displayName: Deploy to PyPI
    pool:
      vmImage: $(linuxImage)
      workspace:
        clean: all
    environment: pypi
    strategy:
      runOnce:
        deploy:
          steps: 
                    
          - template: shared-publish-packages.yml
            parameters:
              publishEndpoint: 'pypi'        

- template: shared-publish-github-stage.yml@ciTemplates
  parameters:
    imageName: $(linuxImage)
    branchName: ${{ variables.targetBranch }}