trigger:
- master
- develop
- release/*

# Don't trigger for a pull request
pr: none

# Schedule to run overnight
schedules:
- cron: "0 20 * * *"
  displayName: Daily overnight build
  branches:
    include:
    - develop
    
variables:
  # Access token for the git repository. Used by the git tag task.
  - name: system_accesstoken
    value: $(System.AccessToken)
  # Include shared variables
  - template: shared-variables.yml

stages:
- template: shared-build-and-test-platforms.yml
  parameters:
    windowsImage: $(windowsImage)
    linuxImage: $(linuxImage)
    macImage: $(macImage)

- stage: Build_Packages
  displayName: Build Packages
  dependsOn: [Windows_x64,Windows_x86,Linux_x64,MacOS_x64]
  jobs:
  - job: Create_Packages
    displayName: Create Packages
     
    pool:
      vmImage: $(linuxImage)

    steps:

    # The lines below are needed to allow the pipeline access to the
    # OAuth access token that controls write access to the git repository. 
    # (Required for GitTag task)
    - checkout: self
      lfs: true
      submodules: recursive
      persistCredentials: true
      
    - task: gittools.gitversion.gitversion-task.GitVersion@5
      displayName: GitVersion
      name: GitVersion
      inputs:
        preferBundledVersion: false

    # Set python version to be used to build the packages.
    - task: UsePythonVersion@0
      inputs:
        versionSpec: $(pythonVersionDefault)
      displayName: 'Use Python 3.7'

    - script: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
      displayName: 'Install dependencies'
      
    # Delete existing packages in the 'dist' directory
    - bash: |
        rm -f ./fiftyone_pipeline_cloudrequestengine/dist/*
        if [ $? != 0]; then
            echo "Failed to delete existing dist folder for fiftyone_pipeline_cloudrequestengine"
            exit 1
        fi

        rm -f ./fiftyone_pipeline_core/dist/*
        if [ $? != 0]; then
            echo "Failed to delete content of dist folder for fiftyone_pipeline_core"
            exit 1
        fi

        rm -f ./fiftyone_pipeline_engines/dist/*
        if [ $? != 0]; then
            echo "Failed to delete content of dist folder for fiftyone_pipeline_engines"
            exit 1
        fi

        rm -f ./fiftyone_pipeline_engines_fiftyone/dist/*
        if [ $? != 0]; then
            echo "Failed to delete content of dist folder for fiftyone_pipeline_engines_fiftyone"
            exit 1
        fi        
      displayName: 'Delete existing packages'

    # Build packages
    - bash: |
        echo 'Setting package version to $(GitVersion.SemVer)'
        cd ./fiftyone_pipeline_cloudrequestengine
        echo $(GitVersion.SemVer) >> version.txt
        if [  $? != 0]; then
          echo "Failed to create version file."
          exit 1
        fi
        python setup.py sdist bdist_wheel
        if [ $? != 0 && ! -d dist]; then
            echo "Failed to create package for fiftyone_pipeline_cloudrequestengine"
            exit 1
        fi
        
        cd ../fiftyone_pipeline_core
        echo $(GitVersion.SemVer) >> version.txt
        if [  $? != 0]; then
          echo "Failed to create version file."
          exit 1
        fi
        python setup.py sdist bdist_wheel
        if [ $? != 0 && ! -d dist]; then
            echo "Failed to create package for fiftyone_pipeline_core"
            exit 1
        fi
        
        cd ../fiftyone_pipeline_engines
        echo $(GitVersion.SemVer) >> version.txt
        if [  $? != 0]; then
          echo "Failed to create version file."
          exit 1
        fi
        python setup.py sdist bdist_wheel
        if [ $? != 0 && ! -d dist]; then
            echo "Failed to create package for fiftyone_pipeline_engines"
            exit 1
        fi
        
        cd ../fiftyone_pipeline_engines_fiftyone
        echo $(GitVersion.SemVer) >> version.txt
        if [  $? != 0]; then
          echo "Failed to create version file."
          exit 1
        fi
        python setup.py sdist bdist_wheel
        if [ $? != 0 && ! -d dist]; then
            echo "Failed to create package for fiftyone_pipeline_engines_fiftyone"
            exit 1
        fi        
      displayName: 'Build Packages'
      
    # Add a tag to the git repository with the version number.
    - task: ATP.ATP-GitTag.GitTag.GitTag@5
      displayName: 'Tag Repo With Version Number'
      inputs:
        tagUser: 'Azure DevOps'
        tagEmail: 'CIUser@51Degrees.com'

    # Only create the tag if we're on master, develop or a release branch.
    # This can be overridden by setting the 'ForceTagCommit' variable to true.
      condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), or(eq(variables['Build.SourceBranch'], 'refs/heads/develop'), or(startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'), eq('true', variables['ForceTagCommit'])))))
      
    # Copy artifacts contents.
    - task: CopyFiles@2
      inputs:
        sourceFolder: '$(Build.SourcesDirectory)'
        Contents: |
         **/dist/*
        targetFolder: $(Build.ArtifactStagingDirectory)
      displayName: 'Copy Build files'
      condition: succeeded()

    - script: |
       ls $(Build.ArtifactStagingDirectory)/**/*   
      displayName: 'List artifact staging contents'
      condition: succeededOrFailed()
      failOnStderr: true
      
    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)'
        preferBundledVersion: True
      displayName: 'Publish Python artifact'
      condition: succeeded()
